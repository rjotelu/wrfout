#!/usr/bin/env python

import os
import sys
import subprocess
import fnmatch
import re
import inspect

wo_path = os.path.abspath(os.path.split(inspect.getfile(
    inspect.currentframe()))[0])

if wo_path not in sys.path:
    sys.path.insert(0, wo_path)

my_env=os.environ.copy()
my_env["NCL_LIB"] = os.path.join(my_env["HOME"], 'nsc/ncl-lib/')
my_env["WRFOUT"] = wo_path
dir_file = "modelout_dir"
wrf_dom = "3"


def set_ncl_fin(env):
    # reg= fnmatch.translate('wrfout*3')
    # print(reg)
    # reobj = re.compile(reg)
    for f in os.listdir('.'):
        if fnmatch.fnmatch(f, 'wrfout*' + 'd0' + wrf_dom + '*'):
            print("WRF output file is set to: " + f)
            env["NCL_FIN"] = f
            return env
        else:
            env["NCL_FIN"] = None
            return env


def run_ncl(tests=False):
    ncl_script="wo.ncl"
    if tests:
        ncl_script="tests/test.ncl"

    global my_env
    print("Entered into: " + os.path.abspath("."))
    my_env = set_ncl_fin(my_env)

    if my_env['NCL_FIN'] is None:
        print("No input file is found, Aborting!!")
        sys.exit()

    log_err = "log.err"
    log_out = "log.out"

    with open(log_out,"w") as out:
        with open(log_err,"w") as err:
            print("creating ncl process ...")
            subprocess.Popen("ncl " + wo_path + "/" + ncl_script, env=my_env,
                             shell=True,universal_newlines=True,
                             stdout=out, stderr=err)

def main():
    global dir_file
    tests = None

    try:
        with open(dir_file) as f:
            modelout_dir = f.read().split()
    except IOError as e:
        modelout_dir=["."]

    if len(sys.argv) > 1 and sys.argv[1] == "test":
        dir_file = "modelout_dir_test"
        tests=True

    for dir in modelout_dir:
        try:
            os.chdir(dir)
            run_ncl(tests)
        except OSError as e:
            print("Warning: %s" % e + " ..Continuing next anyway")


if __name__ == '__main__':
    main()
